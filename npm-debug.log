0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'install', 'oracle' ]
2 info using npm@1.2.18
3 info using node@v0.10.15
4 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/package.json
5 warn package.json express_gen@0.0.1 No README.md file found!
6 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/body-parser/package.json
7 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/chart/package.json
8 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/cookie-parser/package.json
9 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/debug/package.json
10 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/express/package.json
11 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/jade/package.json
12 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/morgan/package.json
13 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/pdfkit/package.json
14 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/sqlite3/package.json
15 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/static-favicon/package.json
16 verbose from cache /home/eric/Workspace/GitHub/NodeJSDashboard/package.json
17 verbose readDependencies using package.json deps
18 verbose cache add [ 'oracle@~0.3.7', null ]
19 verbose cache add name=undefined spec="oracle@~0.3.7" args=["oracle@~0.3.7",null]
20 verbose parsed url { protocol: null,
20 verbose parsed url   slashes: null,
20 verbose parsed url   auth: null,
20 verbose parsed url   host: null,
20 verbose parsed url   port: null,
20 verbose parsed url   hostname: null,
20 verbose parsed url   hash: null,
20 verbose parsed url   search: null,
20 verbose parsed url   query: null,
20 verbose parsed url   pathname: 'oracle@~0.3.7',
20 verbose parsed url   path: 'oracle@~0.3.7',
20 verbose parsed url   href: 'oracle@~0.3.7' }
21 verbose cache add name="oracle" spec="~0.3.7" args=["oracle","~0.3.7"]
22 verbose parsed url { protocol: null,
22 verbose parsed url   slashes: null,
22 verbose parsed url   auth: null,
22 verbose parsed url   host: null,
22 verbose parsed url   port: null,
22 verbose parsed url   hostname: null,
22 verbose parsed url   hash: null,
22 verbose parsed url   search: null,
22 verbose parsed url   query: null,
22 verbose parsed url   pathname: '~0.3.7',
22 verbose parsed url   path: '~0.3.7',
22 verbose parsed url   href: '~0.3.7' }
23 verbose addNamed [ 'oracle', '~0.3.7' ]
24 verbose addNamed [ null, '>=0.3.7-0 <0.4.0-0' ]
25 silly lockFile 9a191bf3-oracle-0-3-7 oracle@~0.3.7
26 verbose lock oracle@~0.3.7 /home/eric/.npm/9a191bf3-oracle-0-3-7.lock
27 silly addNameRange { name: 'oracle', range: '>=0.3.7-0 <0.4.0-0', hasData: false }
28 verbose url raw oracle
29 verbose url resolving [ 'https://registry.npmjs.org/', './oracle' ]
30 verbose url resolved https://registry.npmjs.org/oracle
31 info trying registry request attempt 1 at 00:05:48
32 verbose etag "CQUQUATUZCONR0P1KY70U9D3X"
33 http GET https://registry.npmjs.org/oracle
34 http 304 https://registry.npmjs.org/oracle
35 silly registry.get cb [ 304,
35 silly registry.get   { date: 'Thu, 10 Jul 2014 22:05:48 GMT',
35 silly registry.get     server: 'Apache',
35 silly registry.get     via: '1.1 varnish',
35 silly registry.get     'last-modified': 'Thu, 10 Jul 2014 22:05:48 GMT',
35 silly registry.get     'cache-control': 'max-age=30',
35 silly registry.get     etag: '"CQUQUATUZCONR0P1KY70U9D3X"',
35 silly registry.get     'x-served-by': 'cache-lcy1130-LCY',
35 silly registry.get     'x-cache': 'HIT',
35 silly registry.get     'x-cache-hits': '1',
35 silly registry.get     'x-timer': 'S1405029948.218172,VS0,VE348',
35 silly registry.get     vary: 'Accept',
35 silly registry.get     'content-length': '0',
35 silly registry.get     'keep-alive': 'timeout=10, max=50',
35 silly registry.get     connection: 'Keep-Alive' } ]
36 verbose etag oracle from cache
37 silly addNameRange number 2 { name: 'oracle', range: '>=0.3.7-0 <0.4.0-0', hasData: true }
38 silly addNameRange versions [ 'oracle',
38 silly addNameRange   [ '0.1.0',
38 silly addNameRange     '0.1.1',
38 silly addNameRange     '0.1.2',
38 silly addNameRange     '0.1.3',
38 silly addNameRange     '0.2.0',
38 silly addNameRange     '0.3.0',
38 silly addNameRange     '0.3.1',
38 silly addNameRange     '0.3.2',
38 silly addNameRange     '0.3.3',
38 silly addNameRange     '0.3.4',
38 silly addNameRange     '0.3.5',
38 silly addNameRange     '0.3.6',
38 silly addNameRange     '0.3.7' ] ]
39 verbose addNamed [ 'oracle', '0.3.7' ]
40 verbose addNamed [ '0.3.7', '0.3.7' ]
41 silly lockFile f9620049-oracle-0-3-7 oracle@0.3.7
42 verbose lock oracle@0.3.7 /home/eric/.npm/f9620049-oracle-0-3-7.lock
43 verbose read json /home/eric/.npm/oracle/0.3.7/package/package.json
44 silly lockFile f9620049-oracle-0-3-7 oracle@0.3.7
45 silly lockFile f9620049-oracle-0-3-7 oracle@0.3.7
46 silly lockFile 9a191bf3-oracle-0-3-7 oracle@~0.3.7
47 silly lockFile 9a191bf3-oracle-0-3-7 oracle@~0.3.7
48 silly resolved [ { name: 'oracle',
48 silly resolved     description: 'Oracle database driver',
48 silly resolved     keywords: [ 'database', 'db', 'oracle' ],
48 silly resolved     homepage: 'https://github.com/joeferner/node-oracle',
48 silly resolved     license: 'MIT',
48 silly resolved     version: '0.3.7',
48 silly resolved     engines: { node: '>=0.6.0' },
48 silly resolved     maintainers: [ [Object], [Object], [Object] ],
48 silly resolved     bugs: { url: 'https://github.com/joeferner/node-oracle/issues' },
48 silly resolved     repository:
48 silly resolved      { type: 'git',
48 silly resolved        url: 'git://github.com/joeferner/node-oracle.git' },
48 silly resolved     dependencies: {},
48 silly resolved     devDependencies: { nodeunit: '~>0.8.0' },
48 silly resolved     scripts:
48 silly resolved      { test: 'nodeunit test/integration.js test/outparams.js',
48 silly resolved        install: 'node-gyp rebuild' },
48 silly resolved     main: './index.js',
48 silly resolved     gypfile: true,
48 silly resolved     readme: '# Oracle driver for Node.js\n\nA driver to connect to an Oracle database from node.js, leveraging the "Oracle C++ Call Interface" (OCCI)\nfor connectivity.  This is most commonly obtained as part of the Oracle Instant Client.\n\nIt is known to work with Oracle 10, 11, and 12, and has been mostly tested on Linux, but should also work on OS X and\nWindows 7+\n\n\n# Basic installation\n\n(See INSTALL.md for complete instructions for your platform.)\n\n* Prerequisites:\n  * Python 2.7 (*not* v3.x), used by node-gyp\n  * C++ Compiler toolchain (GCC, Visual Studio or similar)\n* Download the latest Oracle Instant Client Basic and SDK, and extract to the same directory.\n* Set environment variables:\n\n\t```\nOCI_LIB_DIR=/path/to/instant_client\nOCI_INCLUDE_DIR=/path/to/instant_client/sdk/include\nOCI_VERSION=<10, 11, or 12> # Integer. Optional, defaults to \'11\'\nNLS_LANG=.UTF8 # Optional, but required to support international characters\n\t```\n* Create symlinks for libclntsh and libocci in the Instant Client directory (see INSTALL.md)\n* (Linux) Install libaio\n* Configure the dynamic library path on your platform to include $OCI_LIB_DIR (see INSTALL.md)\n* `npm install oracle` to get the latest from npmjs.org\n\n\n# Examples\n\n### Basic example\n\n```javascript\nvar oracle = require(\'oracle\');\n\nvar connectData = {\n\thostname: "localhost",\n\tport: 1521,\n\tdatabase: "xe", // System ID (SID)\n\tuser: "oracle",\n\tpassword: "oracle"\n}\n\noracle.connect(connectData, function(err, connection) {\n\tif (err) { console.log("Error connecting to db:", err); return; }\n\n\tconnection.execute("SELECT systimestamp FROM dual", [], function(err, results) {\n\t\tif (err) { console.log("Error executing query:", err); return; }\n\n\t\tconsole.log(results);\n\t\tconnection.close(); // call only when query is finished executing\n\t});\n});\n```\n\n### Alternative connection using TNS\nReplace the `connectData` object above with one of the following.\n\nWithout tnsnames.ora file:\n\n```javascript\nvar connString = "(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=1521))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=xe)))";\nvar connectData = { "tns": connString, "user": "test", "password": "test" };\n```\nWith tnsnames.ora file:\n\n```text\nDEV =\n\t(DESCRIPTION =\n\t\t(ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))\n\t\t(CONNECT_DATA =\n\t\t\t(SERVER = DEDICATED)\n\t\t\t(SERVICE_NAME = orcl)\n\t\t)\n\t)\n```\n\n```javascript\nvar connectData = { "tns": "DEV", "user": "test", "password": "test" };\n```\n\n### Connection options\n\nThe following options can be set on the connection:\n\n* `connection.setAutoCommit(true/false);`\n* `connection.setPrefetchRowCount(count);` Should improve performance with large result sets\n\n### Out Params\nFollowing the basic example above, a query using a return parameter looks like this:\n\n```javascript\n\t...\n\tconnection.execute(\n\t\t"INSERT INTO person (name) VALUES (:1) RETURNING id INTO :2",\n\t\t[\'joe ferner\', new oracle.OutParam()],\n\t\tfunction(err, results) {\n\t\t\tif ( err ) { ... } \n\t\t\t// results.updateCount = 1\n\t\t\t// results.returnParam = the id of the person just inserted\n\t\t\tconnection.close();\n\t\t}\n\t);\n\t...\n```\n\nThe following OUT Params are supported in Stored Procedures:\n\n* `OCCIINT`\n* `OCCISTRING`\n* `OCCIDOUBLE`\n* `OCCIFLOAT`\n* `OCCICURSOR`\n* `OCCICLOB`\n* `OCCIDATE`\n* `OCCITIMESTAMP`\n* `OCCINUMBER`\n* `OCCIBLOB`\n\nSpecify the return type in the OutParam() constructor:\n\n```javascript\nconnection.execute("call myProc(:1,:2)", ["nodejs", new oracle.OutParam(oracle.OCCISTRING)], ...\n```\n\nWhen using `OCCISTRING`, the size can optionally be specified (default is 200 chars):\n\n```javascript\nconnection.execute("call myProc(:1,:2)", ["nodejs", new oracle.OutParam(oracle.OCCISTRING, {size: 1000})], ...\n```\nSee tests for more examples.\n\n### In/Out Params\nThe following INOUT param types are supported:\n\n* `OCCIINT`\n* `OCCISTRING`\n* `OCCIDOUBLE`\n* `OCCIFLOAT`\n* `OCCINUMBER`\n\nINOUT params are used like normal OUT params, with the optional \'in\' paramater value being passed in the options object:\n\n```javascript\nconnection.execute("call myProc(:1)", [new oracle.OutParam(oracle.OCCIINT, {in: 42})], ...\n```\n\n### Validate connection\nTo validate whether the connection is still established after some time:\n\n```javascript\nif (!connection.isConnected()) {\n\t// Do something like retire this connection from a pool\n}\n```\n\n### Dates\nFor DATE and TIMESTAMP types, the driver uses the UTC methods from the Javascript Date object. This means the DATE\nvalue stored will match the value of `new Date().toISOString()` on your client machine.  Consider this example\nfor a client machine in "GMT-0700":\n\nTable schema:\n\n```sql\nCREATE TABLE date_test (mydate DATE)\n```\n\nJavascript code:\n\n```javascript\n...\n\tvar date = new Date(2013, 11, 24, 18, 0, 1);  // Client timezone dependent\n\tconsole.log(date.toString());      // Tue Dec 24 2013 18:00:01 GMT-0700 (MST)\n\tconsole.log(date.toISOString());   // 2013-12-25T01:00:01.000Z\n\n\tconnection.execute(\n\t\t"INSERT INTO date_test (mydate) VALUES (:1) " +\n\t\t\t"RETURNING mydate, to_char(mydate, \'YYYY-MM-DD HH24:MI:SS\') INTO :2, :3",\n\t\t[date, new oracle.OutParam(oracle.OCCIDATE), new oracle.OutParam(oracle.OCCISTRING)],\n\t\tfunction(err, results) {\n\t\t\tconsole.log(results.returnParam.toString());  // Tue Dec 24 2013 18:00:01 GMT-0700 (MST)\n\t\t\tconsole.log(results.returnParam1);            // 2013-12-25 01:00:01\n\t\t}\n\t);\n...\n```\n\n### Querying large tables\n\nTo query large tables you should use a _reader_:\n\n* `reader = connection.reader(sql, args)`: creates a reader\n* `reader.nextRow(callback)`: returns the next row through the callback\n* `reader.nextRows(count, callback)` returns the next `count` rows through the callback. `count` is optional and `nextRows` uses the prefetch row count when `count` is omitted.  Also, you much check for `row.length` since the reader will continue returning empty arrays once it exceeds the end of the data set provided by the query.\n* `connection.setPrefetchRowCount(count)`: configures the prefetch row count for the connection. Prefetching can have a dramatic impact on performance but uses more memory. \n\nExample:\n\n```javascript\nconnection.setPrefetchRowCount(50);\nvar reader = connection.reader("SELECT * FROM auditlogs", []);\n\nfunction doRead(cb) {\n\treader.nextRow(function(err, row) {\n\t\tif (err) return cb(err);\n\t\tif (row) {\n\t\t\t// do something with row\n\t\t\tconsole.log("got " + JSON.stringify(row));\n\t\t\t// recurse to read next record\n\t\t\treturn doRead(cb)\n\t\t} else {\n\t\t\t// we are done\n\t\t\treturn cb();\n\t\t}\n\t})\n}\n\ndoRead(function(err) {\n\tif (err) throw err; // or log it\n\tconsole.log("all records processed");\n});\n```\n\n### Large inserts or updates\n\nTo insert or update a large number of records you should use _prepared statements_ rather than individual `execute` calls on the connection object:\n\n* `statement = connection.prepare(sql)`: creates a prepared statement.\n* `statement.execute(args, callback)`: executes the prepared statement with the values in `args`. You can call this repeatedly on the same `statement`.\n\nExample:\n\n```javascript\n\nfunction doInsert(stmt, records, cb) {\n\tif (records.length > 0) {\n\t\tstmt.execute([records.shift()], function(err, count) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (count !== 1) return cb(new Error("bad count: " + count));\n\t\t\t// recurse with remaining records\n\t\t\tdoInsert(stmt, records, cb);\n\t\t});\n\t} else {\n\t\t// we are done\n\t\treturn cb();\n\t}\n}\n\nvar statement = connection.prepare("INSERT INTO users (id, firstName, lastName) VALUES (:1, :2, :3)");\ndoInsert(statement, users, function(err) {\n\tif (err) throw err; // or log it\n\tconsole.log("all records inserted");\t\n});\n```\n\n# Limitations/Caveats\n\n* Ensure you always close your connection at the end of use to avoid random false oracle errors.\n* Currently no native support for connection pooling (forthcoming; use generic-pool for now.)\n* Currently no support for column type "Timestamp With Timezone" (Issue #67)\n* While the Oracle TIMESTAMP type provides fractional seconds up to 9 digits (nanoseconds), this will be rounded\n  to the nearest millisecond when converted to a Javascript date (a _data loss_).\n\n# Development\n* Clone the source repo\n* Follow the installation instructions to prepare your environment (using Oracle Instant Client)\n* Run `npm install` or `npm test` in the root of the source directory\n* Point to an Oracle instance of your choice.  The free Oracle Express edition works well:\n  * Oracle Express 11g: http://www.oracle.com/technetwork/database/database-technologies/express-edition/downloads/index.htmlDownload\n* Debugging:\n  * Compile node with debug symbols\n  * Use gdb/ddd or another C++ debugger to step through\n',
48 silly resolved     readmeFilename: 'README.md',
48 silly resolved     _id: 'oracle@0.3.7',
48 silly resolved     _from: 'oracle@~0.3.7' } ]
49 info install oracle@0.3.7 into /home/eric/Workspace/GitHub/NodeJSDashboard
50 info installOne oracle@0.3.7
51 verbose from cache /home/eric/.npm/oracle/0.3.7/package/package.json
52 info /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle unbuild
53 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle/package.json
54 verbose tar unpack /home/eric/.npm/oracle/0.3.7/package.tgz
55 silly lockFile c0454e3a-eJSDashboard-node-modules-oracle /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle
56 verbose lock /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle /home/eric/.npm/c0454e3a-eJSDashboard-node-modules-oracle.lock
57 silly lockFile b4a85b14-ric-npm-oracle-0-3-7-package-tgz /home/eric/.npm/oracle/0.3.7/package.tgz
58 verbose lock /home/eric/.npm/oracle/0.3.7/package.tgz /home/eric/.npm/b4a85b14-ric-npm-oracle-0-3-7-package-tgz.lock
59 silly gunzTarPerm modes [ '755', '644' ]
60 silly gunzTarPerm extractEntry package.json
61 silly gunzTarPerm extractEntry .npmignore
62 silly gunzTarPerm extractEntry README.md
63 silly gunzTarPerm extractEntry LICENSE
64 silly gunzTarPerm extractEntry index.js
65 silly gunzTarPerm extractEntry INSTALL.md
66 silly gunzTarPerm extractEntry lib/oracle.js
67 silly gunzTarPerm extractEntry binding.gyp
68 silly gunzTarPerm extractEntry src/outParam.h
69 silly gunzTarPerm extractEntry src/commitBaton.h
70 silly gunzTarPerm extractEntry src/connection.h
71 silly gunzTarPerm extractEntry src/executeBaton.cpp
72 silly gunzTarPerm extractEntry src/executeBaton.h
73 silly gunzTarPerm extractEntry src/nodeOracleException.h
74 silly gunzTarPerm extractEntry src/oracle_bindings.cpp
75 silly gunzTarPerm extractEntry src/oracle_bindings.h
76 silly gunzTarPerm extractEntry src/outParam.cpp
77 silly gunzTarPerm extractEntry src/connection.cpp
78 silly gunzTarPerm extractEntry src/reader.cpp
79 silly gunzTarPerm extractEntry src/reader.h
80 silly gunzTarPerm extractEntry src/readerBaton.h
81 silly gunzTarPerm extractEntry src/rollbackBaton.h
82 silly gunzTarPerm extractEntry src/statement.cpp
83 silly gunzTarPerm extractEntry src/statement.h
84 silly gunzTarPerm extractEntry src/statementBaton.h
85 silly gunzTarPerm extractEntry src/utils.h
86 silly gunzTarPerm extractEntry test/integration.js
87 silly gunzTarPerm extractEntry test/outparams.js
88 silly gunzTarPerm extractEntry test/prepare.js
89 silly gunzTarPerm extractEntry test/reader.js
90 silly gunzTarPerm extractEntry tests-settings.json
91 verbose read json /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle/package.json
92 silly lockFile c0454e3a-eJSDashboard-node-modules-oracle /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle
93 silly lockFile c0454e3a-eJSDashboard-node-modules-oracle /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle
94 silly lockFile b4a85b14-ric-npm-oracle-0-3-7-package-tgz /home/eric/.npm/oracle/0.3.7/package.tgz
95 silly lockFile b4a85b14-ric-npm-oracle-0-3-7-package-tgz /home/eric/.npm/oracle/0.3.7/package.tgz
96 info preinstall oracle@0.3.7
97 verbose from cache /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle/package.json
98 verbose readDependencies using package.json deps
99 verbose from cache /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle/package.json
100 verbose readDependencies using package.json deps
101 silly resolved []
102 verbose about to build /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle
103 info build /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle
104 verbose from cache /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle/package.json
105 verbose linkStuff [ false,
105 verbose linkStuff   false,
105 verbose linkStuff   false,
105 verbose linkStuff   '/home/eric/Workspace/GitHub/NodeJSDashboard/node_modules' ]
106 info linkStuff oracle@0.3.7
107 verbose linkBins oracle@0.3.7
108 verbose linkMans oracle@0.3.7
109 verbose rebuildBundles oracle@0.3.7
110 info install oracle@0.3.7
111 verbose unsafe-perm in lifecycle false
112 verbose set uid from=0 to=1000
113 silly exec sh "-c" "node-gyp rebuild"
114 silly sh,-c,node-gyp rebuild,/home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle spawning
115 info oracle@0.3.7 Failed to exec install script
116 info /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle unbuild
117 verbose from cache /home/eric/Workspace/GitHub/NodeJSDashboard/node_modules/oracle/package.json
118 warn This failure might be due to the use of legacy binary "node"
119 warn For further explanations, please read
/usr/share/doc/nodejs/README.Debian
120 info preuninstall oracle@0.3.7
121 info uninstall oracle@0.3.7
122 verbose true,/home/eric/Workspace/GitHub/NodeJSDashboard/node_modules,/home/eric/Workspace/GitHub/NodeJSDashboard/node_modules unbuild oracle@0.3.7
123 info postuninstall oracle@0.3.7
124 error oracle@0.3.7 install: `node-gyp rebuild`
124 error `sh "-c" "node-gyp rebuild"` failed with 1
125 error Failed at the oracle@0.3.7 install script.
125 error This is most likely a problem with the oracle package,
125 error not with npm itself.
125 error Tell the author that this fails on your system:
125 error     node-gyp rebuild
125 error You can get their info via:
125 error     npm owner ls oracle
125 error There is likely additional logging output above.
126 error System Linux 3.11.0-23-generic
127 error command "/usr/bin/nodejs" "/usr/bin/npm" "install" "oracle"
128 error cwd /home/eric/Workspace/GitHub/NodeJSDashboard
129 error node -v v0.10.15
130 error npm -v 1.2.18
131 error code ELIFECYCLE
132 verbose exit [ 1, true ]
